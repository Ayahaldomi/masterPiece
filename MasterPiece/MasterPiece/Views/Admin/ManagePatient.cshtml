@model IEnumerable<MasterPiece.Models.Patient>
@{
    ViewBag.Title = "ManagePatient";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .container {
        margin-top: 50px;
    }

    .table-container {
        margin-top: 20px;
    }

    .card {
        padding: 1em;
    }

    button.btn.btn-success {
        margin: 0.5em;
    }

    body {
        background-color: #69acc759;
    }

    .container-fluid {
        padding-top: 120px !important;
    }

    .pagination {
        justify-content: center;
    }
</style>

<div class="card">
    <div class="container">
        <h1 class="text-center">Manage Patients</h1>
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="input-group mb-3">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search by Patient Name or ID" aria-label="Search">
                    <button class="btn btn-outline-secondary" type="button" onclick="searchPatients()">Search</button>
                </div>
            </div>
        </div>

        <div class="table-container">
            <table class="table table-striped" id="testTable">
                <thead>
                    <tr>
                        <th scope="col">Patient ID</th>
                        <th scope="col">Patient Name</th>
                        <th scope="col">Patient Phone Number</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody id="patientTableBody">
                    @foreach (var patient in Model)
                    {
                        <tr>
                            <td>@patient.Patient_ID</td>
                            <td>@patient.Full_Name</td>
                            <td>@patient.Phone_Number</td>
                            <td>
                                <a href="@Url.Action("ManagePatientDetails", "Admin", new { patientID = patient.Patient_ID })">
                                    <button class="btn btn-primary btn-sm">View Details</button>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination controls -->
        @*<nav>
            <ul class="pagination" id="paginationControls"></ul>
        </nav>*@
        <!-- Centered Pagination controls -->
        <div id="pagination" class="text-center">
            <button class="btn btn-outline-primary" onclick="previousPage()">Previous</button>
            <span id="pageNumber" class="mx-2"></span>
            <button class="btn btn-outline-primary" onclick="nextPage()">Next</button>
        </div>
    </div>
</div>

<script>
    // Search functionality
    function searchPatients() {
        const searchString = document.getElementById('searchInput').value.toLowerCase();
        const tableRows = document.querySelectorAll('#patientTableBody tr');

        tableRows.forEach(row => {
            const patientID = row.cells[0].textContent.toLowerCase();
            const patientName = row.cells[1].textContent.toLowerCase();

            if (patientID.includes(searchString) || patientName.includes(searchString)) {
                row.style.display = ''; // Show the row
            } else {
                row.style.display = 'none'; // Hide the row
            }
        });

        // After search, reset pagination
    }

    // Pagination setup
    var currentPage = 1;
    var rowsPerPage = 6; // Set the number of rows to display per page

    function displayTableRows(page) {
        var table = document.getElementById("testTable");
        var rows = table.getElementsByTagName("tbody")[0].getElementsByTagName("tr");
        var totalRows = rows.length;
        var totalPages = Math.ceil(totalRows / rowsPerPage);

        if (page < 1) page = 1;
        if (page > totalPages) page = totalPages;

        currentPage = page;

        // Hide all rows first
        for (var i = 0; i < totalRows; i++) {
            rows[i].style.display = "none";
        }

        // Show rows for the current page
        var start = (page - 1) * rowsPerPage;
        var end = start + rowsPerPage;
        for (var i = start; i < end && i < totalRows; i++) {
            rows[i].style.display = "";
        }

        // Update page number display
        document.getElementById("pageNumber").innerText = "Page " + currentPage + " of " + totalPages;
    }

    function previousPage() {
        if (currentPage > 1) {
            displayTableRows(currentPage - 1);
        }
    }

    function nextPage() {
        var table = document.getElementById("testTable");
        var rows = table.getElementsByTagName("tbody")[0].getElementsByTagName("tr");
        var totalPages = Math.ceil(rows.length / rowsPerPage);
        if (currentPage < totalPages) {
            displayTableRows(currentPage + 1);
        }
    }

    // Initialize pagination on page load
    window.onload = function () {
        displayTableRows(currentPage);
    };
</script>
